For this code I got this Error
[plugin:runtime-error-plugin] Failed to fetch
/home/runner/workspace/client/src/lib/perplexity.ts:17:26
15 |
16 | export async function queryPerplexity(messages: PerplexityMessage[]): Promise<PerplexityResponse> {
17 | const response = await fetch('https://api.perplexity.ai/chat/completions', {
| ^
18 | method: 'POST',
19 | headers: {

But I want to use any one of below models to summarize and chat and wiki media API to fetch data

Best Small LLMs for TransformerJS
Model Size Use Case Compatibility with TransformerJS Performance Considerations
DistilGPT-2 ~80 MB Text generation, summarization, dialogue ✔️ (via Hugging Face or ONNX.js) Lightweight, fast inference, can be optimized with quantization
TinyGPT ~20 MB Text generation, completion tasks ✔️ (via ONNX.js) Very fast, compact, but less capable in complex tasks
MiniGPT-4 ~100 MB Text generation, dialogue, more advanced tasks ✔️ (via ONNX.js) Relatively compact, requires optimization for mobile devices
ALBERT ~45 MB Text classification, question answering ✔️ (via TensorFlow.js or ONNX.js) Efficient for classification tasks, smaller memory footprint
TinyBERT ~50 MB Text classification, summarization ✔️ (via TensorFlow.js or ONNX.js) Optimized for speed and small size, suitable for mobile use
DistilBERT ~66 MB Text classification, Named Entity Recognition ✔️ (via TensorFlow.js or ONNX.js) Well-balanced between size and performance
GPT-Neo 125M ~200 MB Text generation, dialogue, summarization ✔️ (via ONNX.js) Requires more resources, but useful for more complex tasks
Key Points to Consider:
DistilGPT-2 and TinyGPT are among the smallest, making them ideal for mobile and low-resource environments.
MiniGPT-4 is more advanced but requires more resources to run effectively.
ALBERT and TinyBERT are optimized models for text classification and tasks that don't require as heavy computation.

7 minutes ago
PD

bixifa2560

AI
I understand that we need to switch from Perplexity API to a local small LLM using TransformerJS for text summarization and chat functionality. I'll help modify the code to use DistilGPT-2 since it's well-suited for summarization and dialogue while being lightweight.